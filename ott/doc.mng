\documentclass{article}

\usepackage{amsmath,amssymb}
\usepackage[margin=1in]{geometry}
\usepackage{multicol}
\usepackage{ottalt}
\usepackage{xcolor}
\usepackage{xspace}

\inputott{ott}

\newcommand\calculus{$\mathsf{F}_i^+$\xspace}

\title{Compiling from \calculus to JavaScript}
\author{Yaozhu Sun}

\begin{document}

\maketitle

\section*{Syntax of \calculus}
\begin{align*}
  &\text{Types}       &A,B,C ::=&~ [[Top]] ~|~ [[Bot]] ~|~ [[Base]] ~|~ [[X]] ~|~ [[A -> B]] ~|~ [[Forall X*A. B]] ~|~ [[{l : A}]] ~|~ [[A & B]] \\
  &\text{Type indices}&[[T]] ::=&~ [[Base]] ~|~ [[->T]] ~|~ [[\-/T]] ~|~ [[{l : T}]] ~|~ [[T1 & T2]] \\
  &\text{Expressions} &    e ::=&~ [[{}]] ~|~ [[b]] ~|~ [[x]] ~|~ [[fix e]] ~|~ [[\x:A. e:B]] ~|~ [[e1 e2]] ~|~ [[/\X*A. e:B]] ~|~ [[e A]] ~|~ [[{l = e}]] ~|~ [[e.l]] \\
  &                   &        |&~ [[e1 ,, e2]] ~|~ [[e : A]] \\
  &\text{Values}      &    v ::=&~ [[{}]] ~|~ [[b]] ~|~ [[\x:A. e:B]] ~|~ [[/\X*A. e:B]] ~|~ [[{l = v}]] ~|~ [[v1 ,, v2]] \\
\end{align*}

\boxed{[[|A|]] = [[T]]} \hfill \textit{(Type translation)}
\begin{mathpar}
\inferrule{}{ [[|Base|]] = [[Base]] }
\and
\inferrule{}{ [[|X|]] = X }
\and
\inferrule{}{ [[|Forall X*A. B|]] = [[\-/|B|]] }
\and
\inferrule{}{ [[|A->B|]] = [[->|B|]] }
\and
\inferrule{}{ [[|{l:A}|]] = [[{l:|A|}]] }
\and
\inferrule{}{ [[|A&B|]] = [[|A|&|B|]] }
\end{mathpar}

\bigskip\bigskip

\ottdefntoplike

\ottdefnordinary

\newpage
\ottdefncompile
\bigskip\bigskip\bigskip

\begin{multicols}{3}
\begin{verbatim}
/* S1 */
z[t] = b;

/* S2 */
Object.assign(z, x);

/* S3 */
Object.assign(z,
  new function() {
    var y = {};
    J;
    y[t](this, this);
  }
);

/* S4 */
z[t] = (x, y) => { J };

/* S5 */
var x = {};
J1;
var y = {};
J2;
J3;

/* S6 */
z[t] = X => {
  var y = {};
  J;
  return y;
};

/* S7 */
var y = {};
J1;
J2;

/* S8 */
z[t] = () => {
  var y = {};
  J;
  return y;
};

/* S9 */
var y = {};
J1;
J2;

/* S10 */
J1;
J2;

/* S11 */
var x = {};
J1;
J2;
\end{verbatim}
\end{multicols}

\vfill
\ottdefndistapp

\begin{multicols}{3}
\begin{verbatim}
/* S12 */
x[t](y, z);



/* S13 */
Object.assign(z, x[t1](t2));

/* S14 */
Object.assign(z, x[t]());

/* S15 */
J1;
J2;
\end{verbatim}
\end{multicols}

\newpage
\ottdefncosub

\begin{multicols}{3}
\begin{verbatim}
/* S16 */
y[t] = x[t];

/* S17 */
y[t2] = p => {
  var x2 = x[t1](p);
  var y2 = {};
  J2;
  return y2;
};

/* S18 */
y[t2] = X => {
  var x2 = x[t1](X);
  var y2 = {};
  J2;
  return y2;
};

/* S19 */
y[t2] = () => {
  var x0 = x[t1]();
  var y0 = {};
  J;
  return y0;
}

/* S20 */
var y1 = {};
J1;
var y2 = {};
J2;
J3;
\end{verbatim}
\end{multicols}

\newpage
\ottdefncomerge

\begin{multicols}{3}
\begin{verbatim}
/* S21 */
Object.assign(z, x, y);

/* S22 */
z[t] = p => {
  var y1 = x1[t1](p);
  var y2 = x2[t2](p);
  var y = {};
  J;
  return y;
};


/* S23 */
z[t] = X => {
  var y1 = x1[t1](X);
  var y2 = x2[t2](X);
  var y = {};
  J;
  return y;
};



/* S24 */
z[t] = () => {
  var y1 = x1[t1]();
  var y2 = x2[t2]();
  var y = {};
  J;
  return y;
};
\end{verbatim}
\end{multicols}

\end{document}
